#!/bin/bash
echo -e "\n1. Creating Directories"
echo -e "\n2. Listing Folder"
echo -e "\n3. Copying Folder"
echo -e "\n4. Save Password"
echo -e "\n5. Read Password"
echo -e "\n6. Print Newer File"
read -p " Please type any number between 1 to 6 to proceed" number
case $number in
1) 
read -p "Type the name of the folder you want to create" name
mkdir $name ;;
# mkdir is used to make directories
2)
read -p "Please type the name of the folder you want to see" na
cd /home/student/CSI6203/Portfolio/$na
# cd command is used to change directory
ls  
# ls command is used to list the folder
;;
3)
read -p " Please type the name of the folder you want to copy" copy
read -p " Please type the name of the destination folder where you want to copy " destination
cp -r $copy $destination 
# cp command is used to copy the folder or file from source to destination
;;
4)
read -p " Type a folder name: " name
# read -p is the command used for printing and taking input from user storing it into a variable, here that variable is name.
mkdir $name
# mkdir is the command used for making directories.
read -s -p "Type your secret password" pass
# -s is the command used for hiding the sensitive data like passwords.
echo -e " Your secret password is $pass" > secret.txt
# echo command is used for printing.
# -e is the escape sequences for some characters to enable.
mv /home/student/CSI6203/Portfolio/Week3/secret.txt /home/student/CSI6203/Portfolio/Week3/$name
# mv command is used to move folder or file from souce location to destination location
;;
5)
filename="secret.txt"
    if [ -f "$filename" ]; then
    cat /home/student/CSI6203/Portfolio/Week3/$filename 
    # cat command is used to output the content of a file
    else
    echo "Folder does not exist"
    exit 1
    fi
    ;;
6)
read -p "Please type the name of first file you want to compare" first
read -p " Please type the name of the second file you want to compare" second
read -p " Please type the nae of the third file you want to compare" third
unset -v latest
for file in "Week3"; do 
if [ "$first" -nt "$second" ] && [ "$first" -nt "$third" ]; then
# -nt command is used to compare between the two that who is the newer one
echo -e "\n $first is the newest file\n"
elif [ "$second" -nt "$first" ] && [ "$second" -nt "$third" ]; then
echo -e "\n $second is the newest file\n"
elif [ "$third" -nt "$first" ] && [ "$third" -nt "$second" ]; then
echo -e "\n $third is the newest file\n"
fi
done
esac
exit 0
